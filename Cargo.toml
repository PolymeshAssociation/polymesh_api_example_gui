[package]
name = "polymesh_api_example_gui"
default-run = "polymesh_api_example_gui_bin"
version = "0.1.0"
authors = ["Polymesh Association"]
edition = "2021"
rust-version = "1.60"

[[bin]]
name = "polymesh_api_example_gui_bin"
path = "src/main.rs"

[lib]
crate-type = ["cdylib", "rlib"]

[dependencies]
egui = "0.18.0"
eframe = { version = "0.18.0", features = ["persistence"] }
serde = { version = "1", features = ["derive"] } # You only need this if you want app persistence

serde_json = { version = "1.0", features = ["preserve_order"] }
log = "0.4.17"
egui_extras = { version = "0.18.0", features = ["serde"] }
hex = "0.4.3"

#sp-keyring = { version = "6.0.0", default-features = false }

# native:
[target.'cfg(not(target_arch = "wasm32"))'.dependencies]
tracing-subscriber = "0.3"
tokio = { version = "1.19", features = ["full"] }
#polymesh-api = { version = "2.0", features = ["download_metadata"] }
polymesh-api = { version = "2.0", features = [] }

# web:
[target.'cfg(target_arch = "wasm32")'.dependencies]
console_log = { version = "0.2", features = ["color"] }
console_error_panic_hook = "0.1.6"
tracing-wasm = "0.2"
tokio = { version = "1.19", features = ["rt", "sync"] }
polymesh-api = { version = "2.0", default-features = false, features = ["wasm", "serde"] }
wasm-bindgen-futures = "0.4.32"

[profile.release]
opt-level = 2 # fast and small wasm

[patch.crates-io]

# If you want to use the bleeding edge version of egui and eframe:
# egui = { git = "https://github.com/emilk/egui", branch = "master" }
# eframe = { git = "https://github.com/emilk/egui", branch = "master" }

# If you fork https://github.com/emilk/egui you can test with:
# egui = { path = "../egui/egui" }
# eframe = { path = "../egui/eframe" }

#polymesh-api = { path = "../polymesh-api/" }
#subxt-signer = { path = "../subxt/signer/" }
polymesh-api = { git = "https://github.com/PolymeshAssociation/polymesh-api" }
subxt-signer = { git = "https://github.com/Neopallium/subxt" }
